function [ idx ] = largest_convergence_interval( F )
%This is a solver for the discrete vesion of the problem of finding the
%equilibrium point of the largest interval of convergence for the function
%dx=f(x), where x is in the range [a,b]
%In the discrede version F(idx) is a discrete sample of f(x) over the range
%x=linspace(a,b,N). The output idx is the index imediately before convergence
%
%Examples:
if ~exist('F','var')
    idx=[...
        largest_convergence_interval([1 1 -1 -1 -1 1 1 -1 -1]) == 2,...
        largest_convergence_interval([1 1 -1 -1 1 1 1 -1 -1]) == 7,...
        largest_convergence_interval([-1 1 1]) == 3,...
        largest_convergence_interval([-1 -1 1]) == 1,...
        largest_convergence_interval([1 1 1]) == 3,...
        largest_convergence_interval([-1 -1 -1]) == 1,...
        largest_convergence_interval([-1 ]) == 1,...
        largest_convergence_interval([ 1 ]) == 1,...
        largest_convergence_interval([ 0 0 0 ]) == 3,...
        ]
else
    N=numel(F);
    positive=[true reshape( F(2:N),1,[])>=0 false];
    rise_edge_u = and( positive(2:N+1),~positive(1:N));
    fall_edge_l = and(~positive(2:N+1), positive(1:N));
    thresh_idx_l=cummax(fall_edge_l.*(1:N));
    border_idx_u=cummax(rise_edge_u.*(1:N));
    [~,zone_idx]=max((1:N)-border_idx_u);
    idx=thresh_idx_l(zone_idx);
end
end

